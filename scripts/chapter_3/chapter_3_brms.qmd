---
title: "Chapter 3 BRMS"
format: html
---

# Sampling the Imaginary

```{r}
# clean workspace
rm(list = ls())

# call required library
library(ggdist)
library(tidyverse)
library(patchwork)
library(tidybayes)
```

```{r}
tibble(pr_positive_vampire = .95,
       pr_positive_mortal = .01,
       pr_vampire = .001) %>%
  mutate(pr_positive = pr_positive_vampire * pr_vampire + pr_positive_mortal * (1 - pr_vampire)) %>%
  mutate(pr_vampire_positive = pr_positive_vampire * pr_vampire / pr_positive) %>%
  glimpse()
```

```{r}
tibble(pr_vampire = 100 / 100000,
       pr_positive_vampire = 95 / 100,
       pr_positive_mortal = 999 / 99900) %>%
  mutate(pr_positive = 95 + 999) %>%
  mutate(pr_vampire_positive = pr_positive_vampire * 100 / pr_positive) |>
  glimpse()
```

## 3.1 Sampling from a grid-approximate posterior
```{r}
# how many grid points would you like?
n <- 1000
n_success <- 6
n_trials <- 9

(
  d <-
    tibble(p_grid = seq(from = 0, to = 1, length.out = n),
           # note we're stil using a flat uniform prior
           prior = 1) |>
    mutate(likelihood = dbinom(n_success, size = n_trials, prob = p_grid)) |>
    mutate(posterior = likelihood * prior / sum(likelihood * prior))
)
```

Get samples from posterior
```{r}
# how many samples would you like?
n_samples <- 1e4

# make it reproducible
set.seed(3)

samples <-
  d |>
  slice_sample(n = n_samples, weight_by = posterior, replace = T)

glimpse(samples)
```

Plot samples
```{r}
samples |>
  mutate(sample_number = 1:n()) |>
  
  ggplot(aes(x = sample_number, y = p_grid)) +
  geom_point(alpha = 1/10) +
  scale_y_continuous("proportion of water (p)", limits = c(0, 1)) +
  xlab("sample number")
```

Density of samples
```{r}
samples |>
  ggplot(aes(x = p_grid)) +
  geom_density(fill = "black") +
  scale_x_continuous("proportion of water (p)", limits = c(0, 1))
```

Create density with 1mn sample to see smoother density
```{r}
set.seed(3)

d |>
  slice_sample(n = 1e6, weight_by = posterior, replace = T) |>
  
  ggplot(aes(x = p_grid)) +
  geom_density(fill = "black") +
  scale_x_continuous("proportion of water (p)", limits = c(0, 1))
```

## 3.2 Sampling to summarize
### 3.2.1 Intervals of defined boundaries
```{r}
# Get proportion of water less than some value of p_grid
d |>
  filter(p_grid < .5) |>
  summarise(sum = sum(posterior))

# Create frequency based on filtering by samples
samples |>
  filter(p_grid < .5) |>
  summarise(sum = n() / n_samples)

# A more explicit approach for the same computation
samples |>
  filter(p_grid < .5) |>
  mutate(probability = n / sum(n))

samples |>
  summarise(sum = mean(p_grid < .5))

# Determine posterior probability between 0.5 and 0.75
samples |>
  filter(p_grid > .5 & p_grid < .75) |>
  summarise(sum = n() / n_samples)

# Multiply by 100 to get percent
samples |>
  filter(p_grid > .5 & p_grid < .75) |>
  summarise(sum = n() / n_samples,
            percent = n() / n_samples * 100)
```
### 3.2.2 Intervals of defined mass
```{r}
# upper left panel
p1 <-
  d |>
  ggplot(aes(x = p_grid, y = posterior)) +
  geom_line() +
  geom_area(data = d |> filter(p_grid < .5)) +
  labs(x = "proportion of water (p)",
       y = "density")

# upper right panel
p2 <-
  d |>
  ggplot(aes(x = p_grid, y = posterior)) +
  geom_line() +
  # note this next line is the only difference in code from the last plot
  geom_area(data = d |> filter(p_grid < .75 & p_grid > .5)) +
  labs(x = "proportion of water (p)",
       y = "density")

# combine
p1 + p2
```

Lower two panels
```{r}
(q_80 <- quantile(samples$p_grid, prob = .8))

samples |>
  pull(p_grid) |>
  quantile(prob = .8)

samples |>
  summarise('80th percentile' = quantile(p_grid, p = .8))

(q_10_and_90 <- quantile(samples$p_grid, prob = c(.1, .9)))
```

```{r}
# lower left panel
p1 <-
  d |>
  ggplot(aes(x = p_grid, y = posterior)) +
  geom_line() +
  geom_area(data = d |> filter(p_grid < q_80)) +
  annotate(geom = "text",
           x = .25, y = .0025,
           label = "lower 80%") +
  labs(x = "proportion of water (p)",
       y = "density")

# lower right panel
p2 <-
  d |>
  ggplot(aes(x = p_grid, y = posterior)) +
  geom_line() +
  geom_area(data = d |> filter(p_grid > q_10_and_90[1] & p_grid < q_10_and_90[2])) +
  annotate(geom = "text",
           x = .25, y = .0025,
           label = "middle 80%") +
  labs(x = "proportion of water (p)",
       y = "density")

# combine
p1 + p2
```

```{r}
# here we update the 'dbinom()' parameters
n_success <- 3
n_trials <- 3

# update 'd'
d <-
  d |>
  mutate(likelihood = dbinom(n_success, size = n_trials, prob = p_grid)) |>
  mutate(posterior = (likelihood * prior) / sum(likelihood * prior))

# make the next part reproducible
set.seed(3)

# here's our new samples tibble
(
  samples <-
    d |>
    slice_sample(n = n_samples, weight_by = posterior, replace = T)
)
```

```{r}
quantile(samples$p_grid, prob = c(.25, .75))

rethinking::PI(samples$p_grid, prob = .5)
```
Introduce tidybayes package for summarizing Bayesian models
```{r}
median_qi(samples$p_grid, .width = .5)
median_qi(samples$p_grid, .width = c(.5, .8, .99))

rethinking::HPDI(samples$p_grid, prob = .5)

mode_hdi(samples$p_grid, .width = .5)

qi(samples$p_grid, .width = .5)


```

```{r}
# lower left panel
p1 <-
  d |>
  ggplot(aes(x = p_grid, y = posterior)) +
  # check out our sweet 'qi()' indexing
  geom_area(data = d |>
              filter(p_grid > qi(samples$p_grid, .width = .5)[1] & p_grid < qi(samples$p_grid, .width = .5)[2]),
            fill = "grey75") +
  geom_line() +
  labs(subtitle = "50th Percentile Interval",
       x = "proportion of water (p)",
       y = "density")

# lower right panel
p2 <-
  d |>
  ggplot(aes(x = p_grid, y = posterior)) +
  geom_area(data = d |>
              filter(p_grid > hdi(samples$p_grid, .width = .5)[1] &
                       p_grid < hdi(samples$p_grid, .width = .5)[2]),
            fill = "grey75") +
  geom_line() +
  labs(subtitle = "50% HPDI",
       x = "proportion of water (p)",
       y = "density")

# combine
p1 | p2
```

